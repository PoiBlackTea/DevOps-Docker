version: '3.7'
services:
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: jenkins_cadvisor
    ports:
      - "8000:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: '500M'

  jenkins:
    build: 
      context: .
      dockerfile: Dockerfile
    privileged: true
    user: root
    ports:
      - "8080:8080"
      - "50000:50000"
    container_name: jenkins_master
    volumes:
      - jenkins_data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: '1G'
    networks:
      jenkins:

  sonarqube:
    image: sonarqube:community
    depends_on:
      - sonarqube_db
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://sonarqube_db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_bundled-plugins:/opt/sonarqube/lib/bundled-plugins
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: '1G'
    ports:
      - "9000:9000"
    networks:
      - sonarnet

  sonarqube_db:
    image: postgres:14
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data
    networks:
      - sonarnet

volumes:
  jenkins_data:
  sonarqube_data:
  sonarqube_conf:
  sonarqube_bundled-plugins:
  sonarqube_extensions:
  sonarqube_logs:
  postgresql:
  postgresql_data:

networks:
  jenkins:
  sonarnet: